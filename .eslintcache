[{"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\index.tsx":"1","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\reportWebVitals.ts":"2","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\store\\index.ts":"3","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\App.tsx":"4","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\index.ts":"5","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\actions\\themeActions.ts":"6","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\Routes.tsx":"7","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\themeReducer.ts":"8","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authReducer.ts":"9","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\constants\\index.ts":"10","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\index.ts":"11","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authMenuStore.tsx":"12","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authStore.tsx":"13","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\MenuRoutes.tsx":"14","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Dashboard.tsx":"15","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Auth.tsx":"16","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\exception\\Page404.tsx":"17","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\shadows.ts":"18","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\props.ts":"19","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\overrides.ts":"20","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\breakpoints.ts":"21","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\AppBar.tsx":"22","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Sidebar.tsx":"23","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\typography.ts":"24","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\variants.ts":"25","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Async.tsx":"26","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Dashboard.tsx":"27","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\UserDropdown.tsx":"28","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Loader.tsx":"29","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\Mandarin.tsx":"30","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\myTheme.ts":"31","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\OperModal.tsx":"32","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\model\\Operation.tsx":"33","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\snackbar\\TransactionSnackbar.tsx":"34","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\login\\KakaoLogin.tsx":"35","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\model\\User.tsx":"36","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\login\\KakaoLogOut.tsx":"37","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\api\\OperApi.tsx":"38","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\api\\IApi.tsx":"39","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\kakao\\Post.tsx":"40","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\ProgressBar.tsx":"41","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\pageStore.tsx":"42","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\OperSearch.tsx":"43"},{"size":606,"mtime":1626832722051,"results":"44","hashOfConfig":"45"},{"size":440,"mtime":1623825786609,"results":"46","hashOfConfig":"45"},{"size":434,"mtime":1606827188716,"results":"47","hashOfConfig":"45"},{"size":1935,"mtime":1626941807919,"results":"48","hashOfConfig":"45"},{"size":710,"mtime":1637223974933,"results":"49","hashOfConfig":"45"},{"size":259,"mtime":1606827188708,"results":"50","hashOfConfig":"45"},{"size":1979,"mtime":1636440915326,"results":"51","hashOfConfig":"45"},{"size":609,"mtime":1606827188713,"results":"52","hashOfConfig":"45"},{"size":802,"mtime":1611796515772,"results":"53","hashOfConfig":"45"},{"size":843,"mtime":1606827188258,"results":"54","hashOfConfig":"45"},{"size":985,"mtime":1636441588967,"results":"55","hashOfConfig":"45"},{"size":778,"mtime":1611796721463,"results":"56","hashOfConfig":"45"},{"size":1184,"mtime":1637025144967,"results":"57","hashOfConfig":"45"},{"size":1530,"mtime":1637284329102,"results":"58","hashOfConfig":"45"},{"size":3085,"mtime":1636448369686,"results":"59","hashOfConfig":"45"},{"size":750,"mtime":1606827188263,"results":"60","hashOfConfig":"45"},{"size":1379,"mtime":1636441466929,"results":"61","hashOfConfig":"45"},{"size":683,"mtime":1606827188738,"results":"62","hashOfConfig":"45"},{"size":256,"mtime":1606827188734,"results":"63","hashOfConfig":"45"},{"size":1650,"mtime":1606827188730,"results":"64","hashOfConfig":"45"},{"size":147,"mtime":1606827188726,"results":"65","hashOfConfig":"45"},{"size":3455,"mtime":1637115322811,"results":"66","hashOfConfig":"45"},{"size":15117,"mtime":1636448817482,"results":"67","hashOfConfig":"45"},{"size":1139,"mtime":1606827188742,"results":"68","hashOfConfig":"45"},{"size":5444,"mtime":1606827188746,"results":"69","hashOfConfig":"45"},{"size":922,"mtime":1606827188164,"results":"70","hashOfConfig":"45"},{"size":2148,"mtime":1637225583033,"results":"71","hashOfConfig":"45"},{"size":2049,"mtime":1637028719220,"results":"72","hashOfConfig":"73"},{"size":396,"mtime":1606827188247,"results":"74","hashOfConfig":"45"},{"size":6930,"mtime":1637283977086,"results":"75","hashOfConfig":"45"},{"size":6089,"mtime":1627627921048,"results":"76","hashOfConfig":"45"},{"size":12147,"mtime":1637225026566,"results":"77","hashOfConfig":"45"},{"size":428,"mtime":1637224961836,"results":"78","hashOfConfig":"45"},{"size":1186,"mtime":1612860529627,"results":"79","hashOfConfig":"45"},{"size":2495,"mtime":1637031911565,"results":"80","hashOfConfig":"73"},{"size":593,"mtime":1637027586677,"results":"81","hashOfConfig":"73"},{"size":1252,"mtime":1637028701945,"results":"82","hashOfConfig":"73"},{"size":652,"mtime":1637115162191,"results":"83","hashOfConfig":"45"},{"size":535,"mtime":1637225243987,"results":"84","hashOfConfig":"45"},{"size":936,"mtime":1637127152131,"results":"85","hashOfConfig":"73"},{"size":1351,"mtime":1628145909658,"results":"86","hashOfConfig":"45"},{"size":824,"mtime":1628145890181,"results":"87","hashOfConfig":"45"},{"size":17366,"mtime":1638496769124,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ds5ffi",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},"1k5ojup",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\index.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\reportWebVitals.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\store\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\App.tsx",["191","192"],"import React, {useEffect} from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './App.css';\r\nimport {\r\n    StylesProvider,\r\n    ThemeProvider as MuiThemeProvider,\r\n    jssPreset,\r\n} from \"@material-ui/core/styles\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport {ThemeProvider} from \"styled-components/macro\";\r\nimport {create} from \"jss\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Routes from \"./routes/Routes\";\r\nimport createTheme from \"./theme\";\r\nimport {AppStateType} from \"./redux/reducers\";\r\nimport {THEMES} from \"./constants\";\r\nimport {setTheme} from \"./redux/actions/themeActions\";\r\n\r\nconst jss = create({\r\n    ...jssPreset(),\r\n    insertionPoint: document.getElementById(\"jss-insertion-point\")!,\r\n});\r\n\r\nfunction App() {\r\n    const theme = useSelector((state: AppStateType) => state.themeReducer);\r\n    const dispatcher = useDispatch();\r\n\r\n    useEffect(() => {\r\n        settingTheme();\r\n    }, [])\r\n\r\n    // 테마 적용 함수\r\n    const settingTheme = () => {\r\n        if (THEMES.DARK != theme.currentTheme) {\r\n            console.log(\"theme\")\r\n            dispatcher(setTheme(THEMES.DARK))\r\n        } else {\r\n            console.log(\"currentTheme\", theme.currentTheme)\r\n        }\r\n    }\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <Helmet\r\n            titleTemplate=\"%s | AWCS App\"\r\n            defaultTitle=\"AWCS App - Altiall Warehouse Control System\"\r\n        />\r\n        <StylesProvider jss={jss}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <MuiThemeProvider theme={createTheme(theme.currentTheme)}>\r\n              <ThemeProvider theme={createTheme(theme.currentTheme)}>\r\n                  <Routes/>\r\n              </ThemeProvider>\r\n            </MuiThemeProvider>\r\n          </MuiPickersUtilsProvider>\r\n        </StylesProvider>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\actions\\themeActions.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\Routes.tsx",["193","194"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport AuthLayout from \"../layouts/Auth\";\r\nimport DashboardLayout from \"../layouts/Dashboard\";\r\nimport Page404 from \"../pages/exception/Page404\";\r\nimport {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport MenuRoutes from \"./MenuRoutes\";\r\n\r\n\r\nconst childRoutes = (Layout: React.ElementType, routes: Array<RouteType>) =>\r\n  routes.map(\r\n    ({ component: Component, guard, children, path }, index: number) => {\r\n      const Guard = guard || React.Fragment;\r\n\r\n      return children ? (\r\n        children.map((element, index: number) => {\r\n          const Guard = element.guard || React.Fragment;\r\n\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={element.path}\r\n              exact\r\n              render={(props: RouteComponentProps) => (\r\n                <Guard>\r\n                  <Layout>\r\n                    <element.component {...props} />\r\n                  </Layout>\r\n                </Guard>\r\n              )}\r\n            />\r\n          );\r\n        })\r\n      ) : Component ? (\r\n        <Route\r\n          key={index}\r\n          path={path}\r\n          exact\r\n          render={(props) => (\r\n            <Guard>\r\n              <Layout>\r\n                <Component {...props} />\r\n              </Layout>\r\n            </Guard>\r\n          )}\r\n        />\r\n      ) : null;\r\n    }\r\n  );\r\n\r\n\r\nconst Routes = () => {\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n    return (<Router>\r\n        <Switch>\r\n            {childRoutes(DashboardLayout, MenuRoutes())}\r\n            <Route\r\n                render={() => (\r\n                    <AuthLayout>\r\n                        <Page404 />\r\n                    </AuthLayout>\r\n                )}\r\n            />\r\n        </Switch>\r\n    </Router>);\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\themeReducer.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authReducer.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\constants\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authMenuStore.tsx",["195"],"import React from \"react\";\r\nimport {UserMenu} from \"../../model/Menu\";\r\n\r\n\r\nexport interface UserAuthMenu {\r\n    menus : UserMenu[]\r\n}\r\n\r\nexport const SET_USER_MENU = \"SET_USER_MENU\";\r\n\r\ninterface SetUserAuthMenuAction {\r\n    type: typeof SET_USER_MENU\r\n    payload: UserMenu[]\r\n}\r\n\r\nexport type UserAuthActionTypes = SetUserAuthMenuAction;\r\n\r\nexport function setUserAuthMenu(menus:UserMenu[]) {\r\n    return {\r\n        type: SET_USER_MENU,\r\n        payload: menus\r\n    };\r\n}\r\n\r\nconst initialState : UserMenu[] = [];\r\n\r\nexport function userAuthMenuReducer(state=initialState, action:UserAuthActionTypes) {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER_MENU\": return {\r\n            menus: action.payload as UserMenu[]\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authStore.tsx",["196"],"import React from \"react\";\r\nimport {AuthData} from \"../../model/User\";\r\n\r\nexport interface UserAuth {\r\n    isAuth: boolean,\r\n    user: AuthData|null,\r\n}\r\n\r\nexport const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\ninterface UserLoginAction {\r\n    type: typeof USER_LOGIN,\r\n    payload: UserAuth\r\n}\r\n\r\ninterface UserLogoutAction {\r\n    type: typeof USER_LOGOUT\r\n}\r\n\r\nexport type UserAuthActionTypes = UserLoginAction | UserLogoutAction;\r\n\r\nexport function setCurrentUserInfo(userAuth:UserAuth) : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: userAuth\r\n    };\r\n}\r\n\r\nexport function userLogout() : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGOUT\r\n    };\r\n}\r\n\r\n//\r\n//  상태 초기값 설정\r\nconst initialState: UserAuth = {\r\n    isAuth: false,\r\n    user: null,\r\n}\r\n\r\nexport function userAuthReducer(state= initialState, action : UserAuthActionTypes) : UserAuth {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN: return {\r\n            isAuth: true,\r\n            user: action.payload.user\r\n        }\r\n        case USER_LOGOUT: return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\MenuRoutes.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209"],"import {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {\r\n    Codesandbox,\r\n    Monitor,\r\n    ShoppingCart,\r\n    PieChart,\r\n    Sliders,\r\n    Users, IconProps, Calendar, Grid, Shield, Play, Smartphone, GitPullRequest,\r\n} from \"react-feather\";\r\nimport React from \"react\";\r\nimport async from \"../components/Async\";\r\n\r\n// DashBoard\r\nconst Dashboard = async(() => import(\"../pages/dashboard/Dashboard\"));\r\n// Shopping\r\nconst Mandarin = async(() => import(\"../pages/shopping/Mandarin\"));\r\nconst OperSearch = async(() => import(\"../pages/shopping/OperSearch\"));\r\n\r\n\r\nexport const MenuRoutes = (): Array<RouteType> => {\r\n    let routeMenus: Array<RouteType> = [];\r\n\r\n    routeMenus.push(\r\n        {\r\n            id: \"DashBoard\",\r\n            path: \"/\",\r\n            header: \"Test\",\r\n            icon: <Sliders/>,\r\n            component: Dashboard,\r\n            children: null,\r\n        },\r\n        {\r\n            id: \"Shopping\",\r\n            path: \"/Shopping\",\r\n            header: \"Shopping\",\r\n            icon: <Sliders/>,\r\n            component: null,\r\n            children: [\r\n                {\r\n                    path: \"/Shopping/Mandarin\",\r\n                    name: \"서귀포감귤\",\r\n                    component: Mandarin,\r\n                },\r\n                {\r\n                    path: \"/Shopping/OperSearch\",\r\n                    name: \"주문조회\",\r\n                    component: OperSearch,\r\n                }\r\n            ],\r\n        }\r\n    );\r\n\r\n    return routeMenus;\r\n}\r\n\r\nexport default MenuRoutes;","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Dashboard.tsx",["210","211"],"import React, {useState} from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {GlobalStyleProps} from \"../types/styles\";\r\nimport {RouteType} from \"../types/routes\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Header from \"../components/AppBar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Settings from \"../components/Settings\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {\r\n  Hidden,\r\n  CssBaseline,\r\n  Paper as MuiPaper,\r\n  withWidth,\r\n} from \"@material-ui/core\";\r\n\r\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\r\n\r\nconst drawerWidth = 258;\r\n\r\nconst GlobalStyle = createGlobalStyle<GlobalStyleProps>`\r\n  html,\r\n  body,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background: ${(props) => props.theme.palette.background.default};\r\n  }\r\n\r\n  .MuiCardHeader-action .MuiIconButton-root {\r\n    padding: 4px;\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Drawer = styled.div`\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    width: ${drawerWidth}px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst AppContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst MainContent = styled(Paper)`\r\n  flex: 1;\r\n  background: ${(props) => props.theme.palette.background.default};\r\n\r\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n    flex: none;\r\n  }\r\n\r\n  .MuiPaper-root .MuiPaper-root {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\ntype DashboardPropsType = {\r\n  routes: Array<RouteType>;\r\n  width: \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\";\r\n};\r\n\r\nconst Dashboard: React.FC<DashboardPropsType> = ({\r\n                                                   children,\r\n                                                   routes,\r\n                                                   width,\r\n                                                 }) => {\r\n\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <CssBaseline/>\r\n      <GlobalStyle/>\r\n      <Drawer>\r\n        <Hidden mdUp implementation=\"js\">\r\n          <Sidebar\r\n            routes={routes}\r\n            PaperProps={{style: {width: drawerWidth}}}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n          />\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Sidebar\r\n            routes={routes}\r\n            PaperProps={{style: {width: drawerWidth}}}\r\n            onClose={handleDrawerToggle}\r\n          />\r\n        </Hidden>\r\n      </Drawer>\r\n      <AppContent>\r\n        <Header onDrawerToggle={handleDrawerToggle}/>\r\n        <MainContent p={isWidthUp(\"lg\", width) ? 12 : 5}>\r\n          {children}\r\n        </MainContent>\r\n        {/*<Footer/>*/}\r\n      </AppContent>\r\n\r\n      {/*테마 고르는 컴포넌트\r\n      <Settings/>*/}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default withWidth()(Dashboard);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Auth.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\exception\\Page404.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\shadows.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\props.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\overrides.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\breakpoints.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\AppBar.tsx",["212","213","214","215","216","217","218","219","220","221"],"import * as React from \"react\";\r\nimport styled, { withTheme } from \"styled-components/macro\";\r\nimport { darken } from \"polished\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  InputBase,\r\n  AppBar as MuiAppBar,\r\n  IconButton as MuiIconButton,\r\n  Toolbar, MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport {Link} from \"react-router-dom\";\r\nimport KakaoLogOut from \"../pages/login/KakaoLogOut\";\r\nimport KakaoLogin from \"../pages/login/KakaoLogin\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\n\r\nconst AppBar = styled(MuiAppBar)`\r\n  background: ${(props) => props.theme.palette.background.default};\r\n  color: ${(props) => props.theme.header.color};\r\n`;\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Search = styled.div`\r\n  border-radius: 2px;\r\n  background-color: ${(props) => props.theme.header.background};\r\n  display: none;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => darken(0.05, props.theme.header.background)};\r\n  }\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SearchIconWrapper = styled.div`\r\n  width: 50px;\r\n  height: 100%;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Input = styled(InputBase)`\r\n  color: inherit;\r\n  width: 100%;\r\n\r\n  > input {\r\n    color: ${(props) => props.theme.header.search.color};\r\n    padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-left: ${(props) => props.theme.spacing(12)}px;\r\n    width: 160px;\r\n  }\r\n`;\r\n\r\ntype AppBarProps = {\r\n  theme: {};\r\n  onDrawerToggle: React.MouseEventHandler<HTMLElement>;\r\n};\r\n\r\nconst AppBarComponent: React.FC<AppBarProps> = ({ onDrawerToggle }) => {\r\n\r\n  const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <AppBar position=\"sticky\" elevation={0}>\r\n          <Toolbar>\r\n            <Grid container alignItems=\"center\">\r\n              <Hidden mdUp>\r\n                <Grid item>\r\n                  <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"Open drawer\"\r\n                      onClick={onDrawerToggle}\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item>\r\n                {/*<Search>\r\n              <SearchIconWrapper>\r\n                <SearchIcon />\r\n              </SearchIconWrapper>\r\n              <Input placeholder=\"Search topics\" />\r\n            </Search>*/}\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                {/*<MessagesDropdown />\r\n            <NotificationsDropdown />\r\n            <LanguagesDropdown />*/}\r\n                {/*<UserDropdown />*/}\r\n                {/*{userAuth.isAuth ? <UserDropdown />\r\n                    : <MenuItem><KakaoLogin/></MenuItem> }*/}\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withTheme(AppBarComponent);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Sidebar.tsx",["222","223","224","225","226","227","228","229","230","231"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {rgba} from \"polished\";\r\nimport {NavLink, withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {darken} from \"polished\";\r\nimport {RouteType, RouteChildType} from \"../types/routes\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"../vendor/perfect-scrollbar.css\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\n\r\nimport {\r\n    Badge,\r\n    Box as MuiBox,\r\n    Chip,\r\n    Grid,\r\n    Avatar,\r\n    Collapse,\r\n    Drawer as MuiDrawer,\r\n    List as MuiList,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\n\r\nimport {green} from \"@material-ui/core/colors\";\r\n\r\nimport MenuRoutes from \"../routes/MenuRoutes\";\r\nimport async from \"./Async\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\n\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\nconst Drawer = styled(MuiDrawer)`\r\n  border-right: 0;\r\n\r\n  > div {\r\n    border-right: 0;\r\n  }\r\n`;\r\n\r\nconst Scrollbar = styled(PerfectScrollbar)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst List = styled(MuiList)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n`;\r\n\r\nconst Items = styled.div`\r\n  padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n`;\r\n\r\nconst Brand = styled(ListItem)<{\r\n    button?: boolean;\r\n    component?: React.ReactNode;\r\n    to?: string;\r\n}>`\r\n  font-size: ${(props) => props.theme.typography.h5.fontSize};\r\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n  color: ${(props) => props.theme.sidebar.header.color};\r\n  background-color: ${(props) => props.theme.sidebar.header.background};\r\n  font-family: ${(props) => props.theme.typography.fontFamily};\r\n  min-height: 56px;\r\n  padding-left: ${(props) => props.theme.spacing(6)}px;\r\n  padding-right: ${(props) => props.theme.spacing(6)}px;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"sm\")} {\r\n    min-height: 64px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.sidebar.header.background};\r\n  }\r\n`;\r\n\r\nconst BrandIcon = styled.img`\r\n  margin-right: ${(props) => props.theme.spacing(2)}px;\r\n  color: ${(props) => props.theme.sidebar.header.brand.color};\r\n  fill: ${(props) => props.theme.sidebar.header.brand.color};\r\n  width: 40px;\r\n  height: 35px;\r\n`;\r\n\r\nconst BrandChip = styled(Chip)`\r\n  background-color: ${green[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 55%;\r\n  height: 18px;\r\n  margin-left: 2px;\r\n  margin-top: -16px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\ntype CategoryType = {\r\n    activeClassName?: string;\r\n    button?: boolean;\r\n    onClick?: () => void;\r\n    to?: string;\r\n    component?: typeof NavLink;\r\n    exact?: boolean;\r\n};\r\n\r\nconst Category = styled(ListItem)<CategoryType>`\r\n  padding-top: ${(props) => props.theme.spacing(3)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(3)}px;\r\n  padding-left: ${(props) => props.theme.spacing(8)}px;\r\n  padding-right: ${(props) => props.theme.spacing(7)}px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightRegular};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n    darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryText = styled(ListItemText)`\r\n  margin: 0;\r\n  span {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n    padding: 0 ${(props) => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryIconLess = styled(ExpandLess)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst CategoryIconMore = styled(ExpandMore)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst Link = styled(ListItem)<{\r\n    activeClassName: string;\r\n    component: typeof NavLink;\r\n    exact: boolean;\r\n    to: string;\r\n}>`\r\n  padding-left: ${(props) => props.theme.spacing(17.5)}px;\r\n  padding-top: ${(props) => props.theme.spacing(2)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2)}px;\r\n\r\n  span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.7)};\r\n  }\r\n\r\n  &:hover span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.9)};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n    darken(0.015, props.theme.sidebar.background)};\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n    darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkText = styled(ListItemText)`\r\n  color: ${(props) => props.theme.sidebar.color};\r\n  span {\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n  }\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst LinkBadge = styled(Chip)`\r\n  font-size: 11px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightBold};\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 28px;\r\n  top: 8px;\r\n  background: ${(props) => props.theme.sidebar.badge.background};\r\n\r\n  span.MuiChip-label,\r\n  span.MuiChip-label:hover {\r\n    cursor: pointer;\r\n    color: ${(props) => props.theme.sidebar.badge.color};\r\n    padding-left: ${(props) => props.theme.spacing(2)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryBadge = styled(LinkBadge)`\r\n  top: 12px;\r\n`;\r\n\r\nconst SidebarSection = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.color};\r\n  padding: ${(props) => props.theme.spacing(4)}px\r\n    ${(props) => props.theme.spacing(7)}px\r\n    ${(props) => props.theme.spacing(1)}px;\r\n  opacity: 0.9;\r\n  display: block;\r\n`;\r\n\r\nconst SidebarFooter = styled.div`\r\n  background-color: ${(props) =>\r\n    props.theme.sidebar.footer.background} !important;\r\n  padding: ${(props) => props.theme.spacing(2.75)}px\r\n    ${(props) => props.theme.spacing(4)}px;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst SidebarFooterText = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.footer.color};\r\n`;\r\n\r\nconst SidebarFooterSubText = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.footer.color};\r\n  font-size: 0.7rem;\r\n  display: block;\r\n  padding: 1px;\r\n`;\r\n\r\nconst SidebarFooterBadge = styled(Badge)`\r\n  margin-right: ${(props) => props.theme.spacing(1)}px;\r\n  span {\r\n    background-color: ${(props) =>\r\n    props.theme.sidebar.footer.online.background};\r\n    border: 1.5px solid ${(props) => props.theme.palette.common.white};\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\ntype SidebarCategoryPropsType = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    classes?: string;\r\n    isOpen?: boolean;\r\n    isCollapsable: boolean;\r\n    badge?: string | number;\r\n    activeClassName?: string;\r\n    button: true;\r\n    onClick?: () => void;\r\n    to?: string;\r\n    component?: typeof NavLink;\r\n    exact?: boolean;\r\n};\r\n\r\nconst SidebarCategory: React.FC<SidebarCategoryPropsType> = ({\r\n                                                                 name,\r\n                                                                 icon,\r\n                                                                 classes,\r\n                                                                 isOpen,\r\n                                                                 isCollapsable,\r\n                                                                 badge,\r\n                                                                 ...rest\r\n                                                             }) => {\r\n    return (\r\n        <Category {...rest}>\r\n            {icon}\r\n            <CategoryText>{name}</CategoryText>\r\n            {isCollapsable ? (\r\n                isOpen ? (\r\n                    <CategoryIconMore/>\r\n                ) : (\r\n                    <CategoryIconLess/>\r\n                )\r\n            ) : null}\r\n            {badge ? <CategoryBadge label={badge}/> : \"\"}\r\n        </Category>\r\n    );\r\n};\r\n\r\ntype SidebarLinkPropsType = {\r\n    name: string;\r\n    to: string;\r\n    badge?: string | number;\r\n    icon?: JSX.Element;\r\n    onClose: () => void;\r\n};\r\n\r\nconst SidebarLink: React.FC<SidebarLinkPropsType> = ({\r\n                                                         name,\r\n                                                         to,\r\n                                                         badge,\r\n                                                         icon,\r\n                                                         onClose,\r\n                                                     }) => {\r\n    return (\r\n        <Link\r\n            button\r\n            dense\r\n            component={NavLink}\r\n            exact\r\n            to={to}\r\n            activeClassName=\"active\"\r\n            onClick={onClose}\r\n        >\r\n            <LinkText>{name}</LinkText>\r\n            {badge ? <LinkBadge label={badge}/> : \"\"}\r\n        </Link>\r\n    );\r\n};\r\n\r\ntype SidebarPropsType = {\r\n    classes?: string;\r\n    staticContext: string;\r\n    location: {\r\n        pathname: string;\r\n    };\r\n    routes: Array<RouteType>;\r\n    PaperProps: {\r\n        style: {\r\n            width: number;\r\n        };\r\n    };\r\n    variant?: \"permanent\" | \"persistent\" | \"temporary\";\r\n    open?: boolean;\r\n    onClose: () => void;\r\n};\r\n\r\nconst Sidebar: React.FC<RouteComponentProps & SidebarPropsType> = ({\r\n                                                                       classes,\r\n                                                                       staticContext,\r\n                                                                       location,\r\n                                                                       ...rest\r\n                                                                   }) => {\r\n    type tplotOptions = {\r\n        [key: number]: boolean;\r\n    };\r\n    const initOpenRoutes = (): tplotOptions => {\r\n        /* Open collapse element that matches current url */\r\n        const pathName = location.pathname;\r\n        const routes = MenuRoutes();\r\n        let _routes = {};\r\n\r\n        routes.forEach((route: RouteType, index) => {\r\n            const isActive = pathName.indexOf(route.path) === 0;\r\n            const isOpen = route.open;\r\n            const isHome = route.containsHome && pathName === \"/\";\r\n\r\n            _routes = Object.assign({}, _routes, {\r\n                [index]: isActive || isOpen || isHome,\r\n            });\r\n        });\r\n\r\n\r\n        return _routes;\r\n    };\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n    const [openRoutes, setOpenRoutes] = useState(() => initOpenRoutes());\r\n\r\n    const toggle = (index: number) => {\r\n        // Collapse all elements\r\n        Object.keys(openRoutes).forEach(\r\n            (item) =>\r\n                openRoutes[index] ||\r\n                setOpenRoutes((openRoutes) =>\r\n                    Object.assign({}, openRoutes, {[item]: false})\r\n                )\r\n        );\r\n\r\n        // Toggle selected element\r\n        setOpenRoutes((openRoutes) =>\r\n            Object.assign({}, openRoutes, {[index]: !openRoutes[index]})\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Drawer variant=\"permanent\" {...rest}>\r\n            <Brand component={NavLink} to=\"/\" button>\r\n                <BrandIcon src=\"/main-logo2.png\"/>{\" \"}\r\n                <Box ml={1}>\r\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">JG Project Solution</Typography>\r\n                </Box>\r\n            </Brand>\r\n            <Scrollbar>\r\n                <List disablePadding>\r\n                    <Items>\r\n                        {MenuRoutes().map((category: RouteType, index) => (\r\n                            <React.Fragment key={index}>\r\n\r\n                                {category.children && category.icon ? (\r\n                                    <React.Fragment key={index}>\r\n                                        <SidebarCategory\r\n                                            isOpen={!openRoutes[index]}\r\n                                            isCollapsable={true}\r\n                                            name={category.id}\r\n                                            icon={category.icon}\r\n                                            button={true}\r\n                                            onClick={() => {toggle(index);}}\r\n                                        />\r\n\r\n                                        <Collapse\r\n                                            in={openRoutes[index]}\r\n                                            timeout=\"auto\"\r\n                                            unmountOnExit\r\n                                        >\r\n                                            {category.children.map(\r\n                                                (route: RouteChildType, index: number) => (\r\n                                                    <SidebarLink\r\n                                                        key={index}\r\n                                                        name={route.name}\r\n                                                        to={route.path}\r\n                                                        icon={route.icon}\r\n                                                        badge={route.badge}\r\n                                                        onClose={rest.onClose}\r\n                                                    />\r\n                                                )\r\n                                            )}\r\n                                        </Collapse>\r\n                                    </React.Fragment>\r\n                                ) : category.icon ? (\r\n                                    <SidebarCategory\r\n                                        isCollapsable={false}\r\n                                        name={category.id}\r\n                                        to={category.path}\r\n                                        activeClassName=\"active\"\r\n                                        component={NavLink}\r\n                                        icon={category.icon}\r\n                                        exact\r\n                                        button\r\n                                        badge={category.badge}\r\n                                    />\r\n                                ) : null}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Items>\r\n                </List>\r\n            </Scrollbar>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\typography.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\variants.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Async.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Dashboard.tsx",["232"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\n\r\nimport {\r\n    Grid,\r\n    Divider as MuiDivider,\r\n    Typography as MuiTypography, Link,\r\n} from \"@material-ui/core\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction DashBoard() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid justify=\"space-between\" container spacing={6}>\r\n                <Grid item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        Dashboard\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Divider my={6}/>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    안녕하세요. JingooBell 의 개인 사이트입니다.\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    현재 귤 판매 이벤트를 진행중에 있습니다.\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    10Kg 1Box 25000원! 많은 구매 바랍니다.!!!\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} lg={8}>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    Shop 페이지로 이동 후 원클릭 구매요청 가능합니다.\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} lg={8}>\r\n                    ♥3♥\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} lg={8}>\r\n                    <Link component={NavLink} to=\"/Shopping/Mandarin\">\r\n                        Shopping 바로가기\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DashBoard;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\UserDropdown.tsx",["233","234","235","236"],"import * as React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Power } from \"react-feather\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Tooltip,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton as MuiIconButton,\r\n} from \"@material-ui/core\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport KakaoLogin from \"../pages/login/KakaoLogin\";\r\nimport KakaoLogOut from \"../pages/login/KakaoLogOut\";\r\nimport {userLogout} from \"../redux/reducers/authStore\";\r\n\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nfunction UserDropdown() {\r\n  const [anchorMenu, setAnchorMenu] = React.useState<any>(null);\r\n  const history = useHistory();\r\n  const dispatcher = useDispatch();\r\n\r\n  const toggleMenu = (event: React.SyntheticEvent) => {\r\n    setAnchorMenu(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorMenu(null);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      return new Promise((resolve, reject) => {\r\n        if (!window.Kakao) {\r\n          reject('인스턴스 없음');\r\n        }\r\n        window.Kakao.Auth.logout(function() {\r\n          dispatcher(\r\n              userLogout()\r\n          );\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tooltip title=\"Account\">\r\n        <IconButton\r\n          aria-owns={Boolean(anchorMenu) ? \"menu-appbar\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={toggleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <Power />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorMenu}\r\n        open={Boolean(anchorMenu)}\r\n        onClose={closeMenu}\r\n      >\r\n        <MenuItem onClick={closeMenu}>Profile</MenuItem>\r\n        <MenuItem component={Link} to=\"/\" onClick={handleSignOut}>LogOut</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserDropdown;\r\n",["237","238"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Loader.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\Mandarin.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\myTheme.ts",["239","240","241"],"import merge from \"deepmerge\";\r\nimport { green, grey, indigo, red } from \"@material-ui/core/colors\";\r\nimport { THEMES } from \"../constants\";\r\n\r\nconst defaultColor = {\r\n    50: \"#e9f0fb\",\r\n    100: \"#c8daf4\",\r\n    200: \"#a3c1ed\",\r\n    300: \"#7ea8e5\",\r\n    400: \"#6395e0\",\r\n    500: \"#4782da\",\r\n    600: \"#407ad6\",\r\n    700: \"#376fd0\",\r\n    800: \"#2f65cb\",\r\n    900: \"#2052c2 \",\r\n};\r\n\r\nconst darkColor = {\r\n    100: \"#919191\",\r\n    200: \"#7d7d7d\",\r\n    300: \"#616161\",\r\n    400: \"#3d3d3d\",\r\n    500: \"#080808\"\r\n};\r\n\r\nconst turquoiseColor = {\r\n    100: \"#b3ecec\",\r\n    200: \"#89ecda\",\r\n    300: \"#43e8d8\",\r\n    400: \"#40e0d0\",\r\n    500: \"#3bd6c6\",\r\n};\r\n\r\nconst ivoryColor = {\r\n    100: \"#faf0e6\",\r\n    200: \"#fff5ee\",\r\n    300: \"#fdf5e6\",\r\n    400: \"#faf0e6\",\r\n    500: \"#faebd7\",\r\n};\r\n\r\nconst yGreenColor = {\r\n    100: \"#f9f486\",\r\n    200: \"#e9f486\",\r\n    300: \"#d9f486\",\r\n    400: \"#c9f486\",\r\n    500: \"#b9f486\",\r\n};\r\n\r\nconst dGreenColor = {\r\n    100: \"#75876e\",\r\n    200: \"#697a63\",\r\n    300: \"#5e6c58\",\r\n    400: \"#525f4d\",\r\n    500: \"#465142\",\r\n};\r\n\r\nconst defaultACLTheme = {\r\n    name: THEMES.DEFAULT,\r\n    palette: {\r\n        type: \"light\",\r\n        primary: {\r\n            main: turquoiseColor[400],\r\n            contrastText: \"#FFF\",\r\n        },\r\n        secondary: {\r\n            main: turquoiseColor[200],\r\n            contrastText: \"#FFF\",\r\n        },\r\n        background: {\r\n            default: turquoiseColor[300],\r\n            paper: \"#FFF\",\r\n        },\r\n    },\r\n    header: {\r\n        color: grey[500],\r\n        background: \"#FFF\",\r\n        search: {\r\n            color: grey[800],\r\n        },\r\n        indicator: {\r\n            background: turquoiseColor[300],\r\n        },\r\n    },\r\n    footer: {\r\n        color: grey[500],\r\n        background: \"#FFF\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: turquoiseColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: ivoryColor[300],\r\n            brand: {\r\n                color: ivoryColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: green[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#FFF\",\r\n            background: yGreenColor[300],\r\n        },\r\n    },\r\n};\r\n\r\nconst darkACLTheme = merge(defaultACLTheme, {\r\n    name: THEMES.DARK,\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: darkColor[500],\r\n            contrastText: \"#fab219\",\r\n        },\r\n        background: {\r\n            default: darkColor[100],\r\n            paper: darkColor[200],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n    header: {\r\n        color: darkColor[500],\r\n        background: \"#1B2635\",\r\n        search: {\r\n            color: darkColor[500],\r\n        },\r\n    },\r\n    footer: {\r\n        color: darkColor[500],\r\n        background: \"#233044\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: darkColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: darkColor[300],\r\n            brand: {\r\n                color: darkColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: darkColor[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#233044\",\r\n            background: darkColor[300],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n});\r\n\r\nconst greenACLTheme = merge(defaultACLTheme, {\r\n    name: THEMES.GREEN,\r\n    palette: {\r\n        type: \"green\",\r\n        primary: {\r\n            main: dGreenColor[500],\r\n            contrastText: \"#233044\",\r\n        },\r\n        background: {\r\n            default: dGreenColor[100],\r\n            paper: dGreenColor[200],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n    header: {\r\n        color: yGreenColor[500],\r\n        background: \"#1B2635\",\r\n        search: {\r\n            color: dGreenColor[500],\r\n        },\r\n    },\r\n    footer: {\r\n        color: dGreenColor[500],\r\n        background: \"#233044\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: dGreenColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: dGreenColor[300],\r\n            brand: {\r\n                color: dGreenColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: dGreenColor[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#233044\",\r\n            background: dGreenColor[300],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst aclTheme: Array<ACLType> = [\r\n    defaultACLTheme,\r\n    darkACLTheme,\r\n    greenACLTheme\r\n];\r\n\r\nexport default aclTheme;\r\n\r\nexport type ACLType = {\r\n    name: string;\r\n    palette: {\r\n        primary: MainContrastTextType;\r\n        secondary: MainContrastTextType;\r\n    };\r\n    header: ColorBgType & {\r\n        search: {\r\n            color: string;\r\n        };\r\n        indicator: {\r\n            background: string;\r\n        };\r\n    };\r\n    footer: ColorBgType;\r\n    sidebar: ColorBgType & {\r\n        header: ColorBgType & {\r\n            brand: {\r\n                color: string;\r\n            };\r\n        };\r\n        footer: ColorBgType & {\r\n            online: {\r\n                background: string;\r\n            };\r\n        };\r\n        badge: ColorBgType;\r\n    };\r\n};\r\n\r\ntype MainContrastTextType = {\r\n    main: string;\r\n    contrastText: string;\r\n};\r\ntype ColorBgType = {\r\n    color: string;\r\n    background: string;\r\n};\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\OperModal.tsx",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"import React, {ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n    Button as MuiButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Divider as MuiDivider,\r\n    Paper as MuiPaper,\r\n    TextField,\r\n    Grid,\r\n    Typography,\r\n    NativeSelect, Dialog\r\n} from \"@material-ui/core\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {TransactionSnackbar, TransactionSnackbarPropType} from \"../../components/snackbar/TransactionSnackbar\";\r\nimport {Operation} from \"../../model/Operation\";\r\nimport {OperApi} from \"../../api/OperApi\";\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport {setCurrentPageState} from \"../../redux/reducers/pageStore\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchWidth: {\r\n        width: \"200px\"\r\n    }\r\n}));\r\n\r\ntype OperModal = {\r\n    title: string,\r\n    OperationData: Operation,\r\n    onSubmit: () => void\r\n    onClose: () => void\r\n    open: boolean\r\n};\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nexport function OperModal(props: OperModal) {\r\n    const {OperCreate} = OperApi();\r\n\r\n    //snackbar\r\n    const [snackbarState, setSnackbarState] = useState<TransactionSnackbarPropType>({\r\n        open: false,\r\n        message: \"\",\r\n        type: \"success\",\r\n        duration: 3000\r\n    });\r\n\r\n    const [errorSnackbarState, setErrorSnackbarState] = useState<TransactionSnackbarPropType>({\r\n        open: false,\r\n        message: \"\",\r\n        type: \"error\",\r\n        duration: null\r\n    });\r\n\r\n    const snackBarClose = useCallback(() => {\r\n        setSnackbarState({...snackbarState, open: false})\r\n    }, [snackbarState])\r\n\r\n    const errorSnackBarClose = useCallback(() => {\r\n        setErrorSnackbarState({...errorSnackbarState, open: false})\r\n    }, [errorSnackbarState])\r\n\r\n    const [boxQty, setBoxQty] = useState(0);\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n\r\n    const {register, reset, watch, errors, setValue, setError, clearError, handleSubmit} = useForm();\r\n\r\n    const onSubmit = handleSubmit(({name, address, addressDetail, phoneNo, operQty}) => {\r\n\r\n        let patternPhone = /01[016789]-[^0][0-9]{2,3}-[0-9]{3,4}/;\r\n        let nameCheck = /^[가-힣]+$/;\r\n\r\n        if (!nameCheck.test(name)) {\r\n            alert('이름을 확인 해주세요');\r\n            return;\r\n        }\r\n\r\n        address += \", \" + addressDetail;\r\n\r\n        if (phoneNo.length === 11) {\r\n            phoneNo = phoneNo.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3');\r\n        }\r\n        if (phoneNo.length === 13) {\r\n            phoneNo = phoneNo.replace(/-/g, '').replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3');\r\n        }\r\n\r\n\r\n        if (!patternPhone.test(phoneNo)) {\r\n            alert('핸드폰 번호를 확인 해주세요');\r\n            return;\r\n        }\r\n\r\n        let createOper: Operation = new Operation(name, address, phoneNo, operQty);\r\n\r\n        let operMessage = \"\\n이름 : \" + name + \"\\n폰번호 : \" + address + \"\\n주소 : \" + phoneNo + \"\\n수량 : \" + operQty\r\n\r\n        // loading 플레그 변경\r\n        dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n        OperCreate(createOper)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.data != null) {\r\n                    alert('주문완료' + operMessage + \"\\n주문번호 : \" + res.data);\r\n                } else {\r\n                    alert('주문실패 - ' + res);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert('주문실패 - ' + err);\r\n                console.log(err);\r\n            }).finally(() => {\r\n            // loading 플레그 변경\r\n            dispatcher(setCurrentPageState({isLoading: false}));\r\n        });\r\n\r\n        close();\r\n    });\r\n\r\n\r\n    const close = () => {\r\n        if (props.onClose)\r\n            props.onClose();\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    // DaumPostCode\r\n    const [isDaumPost, setIsDaumPost] = useState(false);\r\n\r\n    const width = 595;\r\n    const height = 450;\r\n    const modalStyle = {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: \"-178px\",\r\n        zIndex: \"100\",\r\n        border: \"1px solid #000000\",\r\n        overflow: \"hidden\"\r\n    }\r\n\r\n    const handleOpenPost = () => {\r\n        setIsDaumPost(!isDaumPost);\r\n    }\r\n\r\n    const handleComplete = (data: any) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n\r\n        console.log(fullAddress);  // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\r\n\r\n        props.OperationData.address = fullAddress;\r\n        handleOpenPost();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TransactionSnackbar\r\n                {...snackbarState}\r\n                handleClose={snackBarClose}\r\n            />\r\n\r\n            <Dialog open={props.open}>\r\n                <TransactionSnackbar\r\n                    {...errorSnackbarState}\r\n                    handleClose={errorSnackBarClose}\r\n                />\r\n                <form onSubmit={onSubmit}>\r\n                    <DialogTitle>\r\n                        <Typography gutterBottom>{props.title}</Typography>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container item xs={12} spacing={1} justify=\"flex-start\">\r\n\r\n                            {\r\n                                isDaumPost ?\r\n                                    <Grid item xs={12} sm={12}>\r\n                                        <DaumPostcode\r\n                                            onComplete={handleComplete}\r\n                                            autoClose\r\n                                            width={width}\r\n                                            height={height}\r\n                                        />\r\n                                    </Grid>\r\n                                    :\r\n                                    <>\r\n                                        <Grid item xs={4} sm={4}>\r\n                                            <label>배송 주소</label>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} sm={8}>\r\n                                            <TextField\r\n                                                id=\"address\"\r\n                                                name=\"address\"\r\n                                                variant=\"outlined\"\r\n                                                inputRef={register}\r\n                                                value={props.OperationData.address}\r\n                                                required={true}\r\n                                                size=\"small\"\r\n                                                className={classes.searchWidth}\r\n                                                multiline\r\n                                                rows={2}\r\n                                                onClick={handleOpenPost}\r\n                                                aria-readonly={true}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4} sm={4}>\r\n                                            <label>상세 주소</label>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} sm={8}>\r\n                                            <TextField\r\n                                                id=\"addressDetail\"\r\n                                                name=\"addressDetail\"\r\n                                                variant=\"outlined\"\r\n                                                inputRef={register}\r\n                                                required={false}\r\n                                                size=\"small\"\r\n                                                className={classes.searchWidth}\r\n                                                multiline\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n\r\n                            }\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>주문자 명</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={props.OperationData.name}\r\n                                    size=\"small\"\r\n                                    className={classes.searchWidth}\r\n                                    multiline\r\n                                    /*onChange={(event) => {\r\n                                        props.OperationData.name = event.target.value;\r\n                                    }}*/\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>폰번호</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"phoneNo\"\r\n                                    name=\"phoneNo\"\r\n                                    variant=\"outlined\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={props.OperationData.phoneNo}\r\n                                    size=\"small\"\r\n                                    className={classes.searchWidth}\r\n                                    multiline\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>주문 수량</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"operQty\"\r\n                                    name=\"operQty\"\r\n                                    variant=\"outlined\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={props.OperationData.operQty}\r\n                                    size=\"small\"\r\n                                    className={classes.searchWidth}\r\n                                    multiline\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    {\r\n                        isDaumPost ?\r\n                            <DialogActions>\r\n                                <Button onClick={handleOpenPost} color=\"primary\">닫기</Button>\r\n                            </DialogActions>\r\n                            :\r\n                            <DialogActions>\r\n                                <Button type=\"submit\" color=\"primary\">주문</Button>\r\n                                <Button onClick={close} color=\"primary\">취소</Button>\r\n                            </DialogActions>\r\n                    }\r\n                </form>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\model\\Operation.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\snackbar\\TransactionSnackbar.tsx",["257","258"],"import React, {useState, useEffect} from 'react';\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport { Alert as MuiAlert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\n/** prop type **/\r\nexport type TransactionSnackbarPropType = {\r\n  open: boolean\r\n  type: \"error\" | \"info\" | \"success\"\r\n  message: string\r\n  duration?: number | null\r\n  handleClose?: () => void\r\n};\r\n\r\nexport function TransactionSnackbar(props: TransactionSnackbarPropType) {\r\n  const [state, setState] = useState<TransactionSnackbarPropType>({\r\n    ...props\r\n  });\r\n\r\n  const {open, type, message, duration, handleClose} = state;\r\n\r\n  useEffect(() => {\r\n    setState({...state, ...props})\r\n  }, [props])\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={duration}\r\n      onClose={handleClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <Alert\r\n        onClose={handleClose}\r\n        variant=\"filled\"\r\n        severity={type}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\login\\KakaoLogin.tsx",["259","260","261","262","263","264","265"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\model\\User.tsx",["266"],"import React from 'react';\r\n\r\n\r\nexport class AuthData {\r\n  public access_token:string;\r\n  public expires_in:number;\r\n  public refresh_token:string;\r\n  public refresh_token_expires_in:number;\r\n  public token_type:string;\r\n\r\n  constructor(access_token: string=\"\", expires_in: number=0, refresh_token: string=\"\", refresh_token_expires_in: number=0, token_type: string=\"\") {\r\n    this.access_token = access_token;\r\n    this.expires_in = expires_in;\r\n    this.refresh_token = refresh_token;\r\n    this.refresh_token_expires_in = refresh_token_expires_in;\r\n    this.token_type = token_type;\r\n  }\r\n}\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\login\\KakaoLogOut.tsx",["267","268","269","270","271","272","273","274"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\api\\OperApi.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\api\\IApi.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\kakao\\Post.tsx",["275"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\ProgressBar.tsx",["276","277","278","279","280","281"],"import React from 'react';\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CircularProgress as MuiCircularProgress,\r\n  Divider as MuiDivider,\r\n  LinearProgress as MuiLinearProgress,\r\n  Paper as MuiPaper,\r\n  Typography,\r\n  ListProps, Theme, createStyles, makeStyles, Backdrop,\r\n} from \"@material-ui/core\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Paper = styled(MuiPaper)(spacing);\r\nconst LinearProgress = styled(MuiLinearProgress)(spacing);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ntype LoadingProgressBarProps ={\r\n  isOpen:boolean,\r\n}\r\n\r\nexport function LoadingProgressBar(props:LoadingProgressBarProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.isOpen}>\r\n        <Card mb={6}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Loading...\r\n            </Typography>\r\n            <Paper mt={3}>\r\n              <LinearProgress my={2} color=\"secondary\" />\r\n            </Paper>\r\n          </CardContent>\r\n        </Card>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\pageStore.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\shopping\\OperSearch.tsx",["282","283","284","285","286","287","288"],{"ruleId":"289","severity":1,"message":"290","line":31,"column":8,"nodeType":"291","endLine":31,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":35,"column":25,"nodeType":"295","messageId":"296","endLine":35,"endColumn":27},{"ruleId":"297","severity":1,"message":"298","line":11,"column":9,"nodeType":"299","messageId":"300","endLine":11,"endColumn":23},{"ruleId":"297","severity":1,"message":"301","line":59,"column":11,"nodeType":"299","messageId":"300","endLine":59,"endColumn":19},{"ruleId":"297","severity":1,"message":"302","line":1,"column":8,"nodeType":"299","messageId":"300","endLine":1,"endColumn":13},{"ruleId":"297","severity":1,"message":"302","line":1,"column":8,"nodeType":"299","messageId":"300","endLine":1,"endColumn":13},{"ruleId":"297","severity":1,"message":"298","line":1,"column":9,"nodeType":"299","messageId":"300","endLine":1,"endColumn":23},{"ruleId":"297","severity":1,"message":"303","line":3,"column":5,"nodeType":"299","messageId":"300","endLine":3,"endColumn":16},{"ruleId":"297","severity":1,"message":"304","line":4,"column":5,"nodeType":"299","messageId":"300","endLine":4,"endColumn":12},{"ruleId":"297","severity":1,"message":"305","line":5,"column":5,"nodeType":"299","messageId":"300","endLine":5,"endColumn":17},{"ruleId":"297","severity":1,"message":"306","line":6,"column":5,"nodeType":"299","messageId":"300","endLine":6,"endColumn":13},{"ruleId":"297","severity":1,"message":"307","line":8,"column":5,"nodeType":"299","messageId":"300","endLine":8,"endColumn":10},{"ruleId":"297","severity":1,"message":"308","line":8,"column":12,"nodeType":"299","messageId":"300","endLine":8,"endColumn":21},{"ruleId":"297","severity":1,"message":"309","line":8,"column":23,"nodeType":"299","messageId":"300","endLine":8,"endColumn":31},{"ruleId":"297","severity":1,"message":"310","line":8,"column":33,"nodeType":"299","messageId":"300","endLine":8,"endColumn":37},{"ruleId":"297","severity":1,"message":"311","line":8,"column":39,"nodeType":"299","messageId":"300","endLine":8,"endColumn":45},{"ruleId":"297","severity":1,"message":"312","line":8,"column":47,"nodeType":"299","messageId":"300","endLine":8,"endColumn":51},{"ruleId":"297","severity":1,"message":"313","line":8,"column":53,"nodeType":"299","messageId":"300","endLine":8,"endColumn":63},{"ruleId":"297","severity":1,"message":"314","line":8,"column":65,"nodeType":"299","messageId":"300","endLine":8,"endColumn":79},{"ruleId":"297","severity":1,"message":"315","line":7,"column":8,"nodeType":"299","messageId":"300","endLine":7,"endColumn":14},{"ruleId":"297","severity":1,"message":"316","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":16},{"ruleId":"297","severity":1,"message":"317","line":4,"column":20,"nodeType":"299","messageId":"300","endLine":4,"endColumn":30},{"ruleId":"297","severity":1,"message":"318","line":12,"column":12,"nodeType":"299","messageId":"300","endLine":12,"endColumn":20},{"ruleId":"297","severity":1,"message":"319","line":17,"column":8,"nodeType":"299","messageId":"300","endLine":17,"endColumn":20},{"ruleId":"297","severity":1,"message":"320","line":18,"column":9,"nodeType":"299","messageId":"300","endLine":18,"endColumn":13},{"ruleId":"297","severity":1,"message":"321","line":19,"column":8,"nodeType":"299","messageId":"300","endLine":19,"endColumn":19},{"ruleId":"297","severity":1,"message":"322","line":20,"column":8,"nodeType":"299","messageId":"300","endLine":20,"endColumn":18},{"ruleId":"297","severity":1,"message":"323","line":35,"column":7,"nodeType":"299","messageId":"300","endLine":35,"endColumn":13},{"ruleId":"297","severity":1,"message":"324","line":51,"column":7,"nodeType":"299","messageId":"300","endLine":51,"endColumn":24},{"ruleId":"297","severity":1,"message":"325","line":66,"column":7,"nodeType":"299","messageId":"300","endLine":66,"endColumn":12},{"ruleId":"297","severity":1,"message":"301","line":87,"column":9,"nodeType":"299","messageId":"300","endLine":87,"endColumn":17},{"ruleId":"297","severity":1,"message":"310","line":16,"column":5,"nodeType":"299","messageId":"300","endLine":16,"endColumn":9},{"ruleId":"297","severity":1,"message":"326","line":17,"column":5,"nodeType":"299","messageId":"300","endLine":17,"endColumn":11},{"ruleId":"297","severity":1,"message":"327","line":31,"column":8,"nodeType":"299","messageId":"300","endLine":31,"endColumn":13},{"ruleId":"297","severity":1,"message":"328","line":91,"column":7,"nodeType":"299","messageId":"300","endLine":91,"endColumn":16},{"ruleId":"297","severity":1,"message":"329","line":226,"column":7,"nodeType":"299","messageId":"300","endLine":226,"endColumn":21},{"ruleId":"297","severity":1,"message":"330","line":235,"column":7,"nodeType":"299","messageId":"300","endLine":235,"endColumn":20},{"ruleId":"297","severity":1,"message":"331","line":243,"column":7,"nodeType":"299","messageId":"300","endLine":243,"endColumn":24},{"ruleId":"297","severity":1,"message":"332","line":247,"column":7,"nodeType":"299","messageId":"300","endLine":247,"endColumn":27},{"ruleId":"297","severity":1,"message":"333","line":254,"column":7,"nodeType":"299","messageId":"300","endLine":254,"endColumn":25},{"ruleId":"297","severity":1,"message":"301","line":382,"column":11,"nodeType":"299","messageId":"300","endLine":382,"endColumn":19},{"ruleId":"297","severity":1,"message":"334","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":24},{"ruleId":"297","severity":1,"message":"335","line":13,"column":9,"nodeType":"299","messageId":"300","endLine":13,"endColumn":25},{"ruleId":"297","severity":1,"message":"322","line":14,"column":8,"nodeType":"299","messageId":"300","endLine":14,"endColumn":18},{"ruleId":"297","severity":1,"message":"321","line":15,"column":8,"nodeType":"299","messageId":"300","endLine":15,"endColumn":19},{"ruleId":"297","severity":1,"message":"336","line":28,"column":9,"nodeType":"299","messageId":"300","endLine":28,"endColumn":16},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"297","severity":1,"message":"341","line":2,"column":23,"nodeType":"299","messageId":"300","endLine":2,"endColumn":29},{"ruleId":"297","severity":1,"message":"342","line":2,"column":31,"nodeType":"299","messageId":"300","endLine":2,"endColumn":34},{"ruleId":"297","severity":1,"message":"343","line":5,"column":7,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"344","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"345","line":1,"column":40,"nodeType":"299","messageId":"300","endLine":1,"endColumn":49},{"ruleId":"297","severity":1,"message":"346","line":7,"column":16,"nodeType":"299","messageId":"300","endLine":7,"endColumn":26},{"ruleId":"297","severity":1,"message":"347","line":12,"column":5,"nodeType":"299","messageId":"300","endLine":12,"endColumn":17},{"ruleId":"297","severity":1,"message":"348","line":42,"column":7,"nodeType":"299","messageId":"300","endLine":42,"endColumn":12},{"ruleId":"349","severity":1,"message":"350","line":44,"column":17,"nodeType":"299","messageId":"351","endLine":44,"endColumn":26},{"ruleId":"297","severity":1,"message":"352","line":70,"column":12,"nodeType":"299","messageId":"300","endLine":70,"endColumn":18},{"ruleId":"297","severity":1,"message":"353","line":70,"column":20,"nodeType":"299","messageId":"300","endLine":70,"endColumn":29},{"ruleId":"297","severity":1,"message":"354","line":75,"column":22,"nodeType":"299","messageId":"300","endLine":75,"endColumn":27},{"ruleId":"297","severity":1,"message":"355","line":75,"column":29,"nodeType":"299","messageId":"300","endLine":75,"endColumn":34},{"ruleId":"297","severity":1,"message":"356","line":75,"column":36,"nodeType":"299","messageId":"300","endLine":75,"endColumn":42},{"ruleId":"297","severity":1,"message":"357","line":75,"column":44,"nodeType":"299","messageId":"300","endLine":75,"endColumn":52},{"ruleId":"297","severity":1,"message":"358","line":75,"column":54,"nodeType":"299","messageId":"300","endLine":75,"endColumn":62},{"ruleId":"297","severity":1,"message":"359","line":75,"column":64,"nodeType":"299","messageId":"300","endLine":75,"endColumn":74},{"ruleId":"297","severity":1,"message":"360","line":143,"column":11,"nodeType":"299","messageId":"300","endLine":143,"endColumn":21},{"ruleId":"297","severity":1,"message":"361","line":7,"column":29,"nodeType":"299","messageId":"300","endLine":7,"endColumn":39},{"ruleId":"289","severity":1,"message":"362","line":29,"column":6,"nodeType":"291","endLine":29,"endColumn":13,"suggestions":"363"},{"ruleId":"297","severity":1,"message":"364","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"365","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"297","severity":1,"message":"366","line":5,"column":29,"nodeType":"299","messageId":"300","endLine":5,"endColumn":37},{"ruleId":"297","severity":1,"message":"367","line":5,"column":39,"nodeType":"299","messageId":"300","endLine":5,"endColumn":49},{"ruleId":"297","severity":1,"message":"368","line":8,"column":9,"nodeType":"299","messageId":"300","endLine":8,"endColumn":16},{"ruleId":"297","severity":1,"message":"369","line":30,"column":12,"nodeType":"299","messageId":"300","endLine":30,"endColumn":24},{"ruleId":"297","severity":1,"message":"370","line":30,"column":26,"nodeType":"299","messageId":"300","endLine":30,"endColumn":41},{"ruleId":"297","severity":1,"message":"302","line":1,"column":8,"nodeType":"299","messageId":"300","endLine":1,"endColumn":13},{"ruleId":"297","severity":1,"message":"364","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"345","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"365","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"297","severity":1,"message":"371","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":21},{"ruleId":"297","severity":1,"message":"372","line":5,"column":9,"nodeType":"299","messageId":"300","endLine":5,"endColumn":27},{"ruleId":"297","severity":1,"message":"366","line":5,"column":29,"nodeType":"299","messageId":"300","endLine":5,"endColumn":37},{"ruleId":"297","severity":1,"message":"373","line":6,"column":9,"nodeType":"299","messageId":"300","endLine":6,"endColumn":17},{"ruleId":"297","severity":1,"message":"368","line":8,"column":9,"nodeType":"299","messageId":"300","endLine":8,"endColumn":16},{"ruleId":"297","severity":1,"message":"374","line":3,"column":9,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"310","line":4,"column":3,"nodeType":"299","messageId":"300","endLine":4,"endColumn":7},{"ruleId":"297","severity":1,"message":"320","line":5,"column":3,"nodeType":"299","messageId":"300","endLine":5,"endColumn":7},{"ruleId":"297","severity":1,"message":"375","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":32},{"ruleId":"297","severity":1,"message":"376","line":8,"column":23,"nodeType":"299","messageId":"300","endLine":8,"endColumn":42},{"ruleId":"297","severity":1,"message":"346","line":9,"column":14,"nodeType":"299","messageId":"300","endLine":9,"endColumn":24},{"ruleId":"297","severity":1,"message":"377","line":13,"column":3,"nodeType":"299","messageId":"300","endLine":13,"endColumn":12},{"ruleId":"297","severity":1,"message":"334","line":1,"column":16,"nodeType":"299","messageId":"300","endLine":1,"endColumn":24},{"ruleId":"297","severity":1,"message":"378","line":21,"column":5,"nodeType":"299","messageId":"300","endLine":21,"endColumn":20},{"ruleId":"297","severity":1,"message":"379","line":36,"column":9,"nodeType":"299","messageId":"300","endLine":36,"endColumn":18},{"ruleId":"297","severity":1,"message":"380","line":37,"column":9,"nodeType":"299","messageId":"300","endLine":37,"endColumn":27},{"ruleId":"297","severity":1,"message":"335","line":38,"column":9,"nodeType":"299","messageId":"300","endLine":38,"endColumn":25},{"ruleId":"297","severity":1,"message":"381","line":314,"column":11,"nodeType":"299","messageId":"300","endLine":314,"endColumn":27},{"ruleId":"297","severity":1,"message":"382","line":321,"column":11,"nodeType":"299","messageId":"300","endLine":321,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingTheme'. Either include it or remove the dependency array.","ArrayExpression",["383"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'RouteChildType' is defined but never used.","Identifier","unusedVar","'userAuth' is assigned a value but never used.","'React' is defined but never used.","'Codesandbox' is defined but never used.","'Monitor' is defined but never used.","'ShoppingCart' is defined but never used.","'PieChart' is defined but never used.","'Users' is defined but never used.","'IconProps' is defined but never used.","'Calendar' is defined but never used.","'Grid' is defined but never used.","'Shield' is defined but never used.","'Play' is defined but never used.","'Smartphone' is defined but never used.","'GitPullRequest' is defined but never used.","'Footer' is defined but never used.","'Settings' is defined but never used.","'SearchIcon' is defined but never used.","'MenuItem' is defined but never used.","'UserDropdown' is defined but never used.","'Link' is defined but never used.","'KakaoLogOut' is defined but never used.","'KakaoLogin' is defined but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'Input' is assigned a value but never used.","'Avatar' is defined but never used.","'async' is defined but never used.","'BrandChip' is assigned a value but never used.","'SidebarSection' is assigned a value but never used.","'SidebarFooter' is assigned a value but never used.","'SidebarFooterText' is assigned a value but never used.","'SidebarFooterSubText' is assigned a value but never used.","'SidebarFooterBadge' is assigned a value but never used.","'useState' is defined but never used.","'useTypedSelector' is defined but never used.","'history' is assigned a value but never used.","no-native-reassign",["384"],"no-negated-in-lhs",["385"],"'indigo' is defined but never used.","'red' is defined but never used.","'defaultColor' is assigned a value but never used.","'ReactNode' is defined but never used.","'useEffect' is defined but never used.","'MuiDivider' is defined but never used.","'NativeSelect' is defined but never used.","'Paper' is assigned a value but never used.","@typescript-eslint/no-redeclare","'OperModal' is already defined.","redeclared","'boxQty' is assigned a value but never used.","'setBoxQty' is assigned a value but never used.","'reset' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setError' is assigned a value but never used.","'clearError' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'AlertTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["386"],"'Component' is defined but never used.","'withRouter' is defined but never used.","'UserAuth' is defined but never used.","'userLogout' is defined but never used.","'boolean' is defined but never used.","'userObjState' is assigned a value but never used.","'setUserObjState' is assigned a value but never used.","'KakaoLoginImg' is defined but never used.","'setCurrentUserInfo' is defined but never used.","'AuthData' is defined but never used.","'withTheme' is defined but never used.","'MuiBreadcrumbs' is defined but never used.","'MuiCircularProgress' is defined but never used.","'ListProps' is defined but never used.","'TablePagination' is defined but never used.","'Operation' is defined but never used.","'LoadingProgressBar' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.",{"desc":"387","fix":"388"},"no-global-assign","no-unsafe-negation",{"desc":"389","fix":"390"},"Update the dependencies array to be: [settingTheme]",{"range":"391","text":"392"},"Update the dependencies array to be: [props, state]",{"range":"393","text":"394"},[1002,1004],"[settingTheme]",[804,811],"[props, state]"]